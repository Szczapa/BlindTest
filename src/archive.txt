import { saveScore, getScore, clearScore, saveMoney, getMoney, clearMoney } from "./cacheGestion.js";

document.addEventListener("DOMContentLoaded", () => {
    const imgContainer: HTMLElement | null = document.querySelector(".img_container");
    const form: HTMLFormElement | null = document.querySelector("#blindtest");
    const input: HTMLInputElement | null = document.querySelector("#answer");
    const audioPlayer: HTMLAudioElement | null = document.querySelector("#audioPlayer");
    const scoreElement: HTMLElement | null = document.querySelector(".score");
    const triesElement: HTMLElement | null = document.querySelector(".tries");
    const startBtn : HTMLElement | null = document.querySelector(".startBtn")

    const characterList: string[] = [
        "adamwarlock", "blackpanther", "blackwidow", "captainamerica",
        "cloak&dagger", "doctorstrange", "groot", "hawkeye", "hela", "hulk",
        "invisiblewoman", "ironfist", "ironman", "jeffthelandshark", "loki", "lunasnow",
        "magik", "magneto", "mantis", "misterfantastic", "moonknight",
        "namor", "peniparker", "psylocke", "rocketracoon", "scarletwitch",
        "spider-man", "squirrelgirl", "star-lord", "storm", "thepunisher",
        "thor", "venom", "wintersoldier", "wolverine"
    ];

    let tryCount: number = 0;
    let scoreCount: number = 0;
    let failCount: number = 2;

    let currentCharacter: string | null = null;

    function pickRandomCharacter(): void {
        failCount = 2; 
        const randomIndex = Math.floor(Math.random() * characterList.length);
        currentCharacter = characterList[randomIndex];
        console.log(`Dev Debug: Le personnage choisi est ${currentCharacter}`);

        if (audioPlayer && currentCharacter) {
            audioPlayer.src = `./src/audio/${currentCharacter}.mp3`;
            audioPlayer.play().catch((err) => console.error("Erreur de lecture audio:", err));
        }
    }

    function resetContainer(): void {
        if (imgContainer) {
            imgContainer.innerHTML = "";
        }
    }

    function updateScoreBoard(): void {
        if (scoreElement) scoreElement.textContent = scoreCount.toString();
        if (triesElement) triesElement.textContent = tryCount.toString();
    }

    function validateAnswer(event: Event): void {
        event.preventDefault();

        if (!currentCharacter || !input) return;

        const userAnswer = input.value.trim().toLowerCase().replace(/\s/g, '');       
        console.log(userAnswer);
        
        resetContainer();

        if (userAnswer === currentCharacter) {
            if (imgContainer) {
                const img: HTMLImageElement = document.createElement("img");
                img.src = `./src/image/${currentCharacter}.png`;
                img.alt = `Image de ${currentCharacter}`;
                img.classList.add("card");
                imgContainer.appendChild(img);
            }

            const successMessage = document.createElement("div");
            successMessage.textContent = "Bonne rÃ©ponse ! ðŸŽ‰";
            successMessage.classList.add("feedback-success");
            imgContainer?.appendChild(successMessage);

            scoreCount++;
            pickRandomCharacter();
        } else {
            failCount--;
            tryCount++;
            if (failCount <= 0) {
                const errorMessage = document.createElement("div");
                errorMessage.textContent = `Punition 2â‚¬ Ã  ajouter. Changement de personnage!`;
                errorMessage.classList.add("feedback-error");
                imgContainer?.appendChild(errorMessage);

                tryCount += 1; 
                pickRandomCharacter();
            } else{
                const errorMessage = document.createElement("div");
                errorMessage.textContent = "Mauvaise rÃ©ponse. "+failCount+" essai(s) restant.";
                errorMessage.classList.add("feedback-error");
                imgContainer?.appendChild(errorMessage);
            }
        }

        updateScoreBoard();
        input.value = "";
    }

  
    pickRandomCharacter();
    updateScoreBoard();


    form?.addEventListener("submit", validateAnswer);

    startBtn?.addEventListener("click", () => {
        clearScore();
        clearMoney();
    });
    
});
